version: '3.9'

services:
  backend:
    build:
      context: ./backend
    container_name: rag_backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./models:/app/models
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      - db
      - redis
    restart: on-failure

  db:
    container_name: rag_db
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    container_name: rag_frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      - backend
    restart: unless-stopped

  redis:
    container_name: rag_redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: always

  worker:
    build:
      context: ./backend
    container_name: rag_worker
    command: celery -A app.core.celery_worker.celery_app worker -l info -Q document_processing
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./models:/app/models
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      - redis
      - db
    restart: on-failure

volumes:
  postgres_data: